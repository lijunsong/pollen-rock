{"version":3,"sources":["../node_modules/codemirror/mode/spreadsheet/spreadsheet.js"],"names":["CodeMirror","defineMode","startState","stringType","stack","token","stream","state","length","peek","next","unshift","eol","shift","match","indexOf","eatSpace","defineMIME","mod","__webpack_require__"],"mappings":"+EAOC,SAAAA,GACD,aAEAA,EAAAC,WAAA,yBACA,OACAC,WAAA,WACA,OACAC,WAAA,KACAC,MAAA,KAGAC,MAAA,SAAAC,EAAAC,GACA,GAAAD,EAAA,CAcA,OAZA,IAAAC,EAAAH,MAAAI,SAEA,KAAAF,EAAAG,QAAA,KAAAH,EAAAG,SACAF,EAAAJ,WAAAG,EAAAG,OACAH,EAAAI,OAEAH,EAAAH,MAAAO,QAAA,YAMAJ,EAAAH,MAAA,IACA,aACA,gBAAAG,EAAAH,MAAA,KAAAE,EAAAM,OACAN,EAAAG,SAAAF,EAAAJ,YACAG,EAAAI,OAEAH,EAAAH,MAAAS,SACe,OAAAP,EAAAG,QACfH,EAAAI,OACAJ,EAAAI,QAEAJ,EAAAQ,MAAA,gBAIA,eAEA,qBACA,wBAAAP,EAAAH,MAAA,KAAAE,EAAAM,OACAN,EAAAQ,MAAA,cAAAR,EAAAQ,MAAA,SAAAP,EAAAH,MAAAS,QAGA,iBAGA,IAAAJ,EAAAH,EAAAG,OAEA,OAAAA,GACA,QAGA,OAFAH,EAAAI,OACAH,EAAAH,MAAAO,QAAA,kBACA,UAEA,QAEA,OADAL,EAAAI,OACA,WAEA,SACA,OAAAJ,EAAAQ,MAAA,wBACAR,EAAAI,OACA,QAGA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,OADAJ,EAAAI,OACA,OAEA,QAEA,OADAJ,EAAAI,OACA,UAGA,OAAAJ,EAAAQ,MAAA,OACAR,EAAAQ,MAAA,gBACA,SACSR,EAAAQ,MAAA,iBACTR,EAAAQ,MAAA,0BACA,cAC+C,GAAtC,qBAAiC,KAAKC,QAAAN,IAC/CH,EAAAI,OACA,YACSJ,EAAAU,YACTV,EAAAI,OAGA,WAIAV,EAAAiB,WAAA,oCA3GAC,CAAQC,EAAQ","file":"static/js/86.6d8157c8.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function startState() {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function token(stream, state) {\n        if (!stream) return; //check for state changes\n\n        if (state.stack.length === 0) {\n          //strings\n          if (stream.peek() == '\"' || stream.peek() == \"'\") {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n\n            state.stack.unshift(\"string\");\n          }\n        } //return state\n        //stack has\n\n\n        switch (state.stack[0]) {\n          case \"string\":\n            while (state.stack[0] === \"string\" && !stream.eol()) {\n              if (stream.peek() === state.stringType) {\n                stream.next(); // Skip quote\n\n                state.stack.shift(); // Clear flag\n              } else if (stream.peek() === \"\\\\\") {\n                stream.next();\n                stream.next();\n              } else {\n                stream.match(/^.[^\\\\\\\"\\']*/);\n              }\n            }\n\n            return \"string\";\n\n          case \"characterClass\":\n            while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n              if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) state.stack.shift();\n            }\n\n            return \"operator\";\n        }\n\n        var peek = stream.peek(); //no stack\n\n        switch (peek) {\n          case \"[\":\n            stream.next();\n            state.stack.unshift(\"characterClass\");\n            return \"bracket\";\n\n          case \":\":\n            stream.next();\n            return \"operator\";\n\n          case \"\\\\\":\n            if (stream.match(/\\\\[a-z]+/)) return \"string-2\";else {\n              stream.next();\n              return \"atom\";\n            }\n\n          case \".\":\n          case \",\":\n          case \";\":\n          case \"*\":\n          case \"-\":\n          case \"+\":\n          case \"^\":\n          case \"<\":\n          case \"/\":\n          case \"=\":\n            stream.next();\n            return \"atom\";\n\n          case \"$\":\n            stream.next();\n            return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});"],"sourceRoot":""}