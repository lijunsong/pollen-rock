{"version":3,"sources":["../node_modules/codemirror/mode/ntriples/ntriples.js"],"names":["CodeMirror","defineMode","Location","PRE_SUBJECT","WRITING_SUB_URI","WRITING_BNODE_URI","PRE_PRED","WRITING_PRED_URI","PRE_OBJ","WRITING_OBJ_URI","WRITING_OBJ_BNODE","WRITING_OBJ_LITERAL","WRITING_LIT_LANG","WRITING_LIT_TYPE","POST_OBJ","ERROR","transitState","currState","c","ret","currLocation","location","startState","uris","anchors","bnodes","langs","types","token","stream","state","ch","next","parsedURI","eatWhile","push","match","parsedAnchor","parsedBNode","peek","parsedLang","parsedType","defineMIME","mod","__webpack_require__"],"mappings":"+EAmCC,SAAAA,GACD,aAEAA,EAAAC,WAAA,sBACA,IAAAC,EAAA,CACAC,YAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,SAAA,EACAC,iBAAA,EACAC,QAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,iBAAA,EACAC,iBAAA,GACAC,SAAA,GACAC,MAAA,IAGA,SAAAC,EAAAC,EAAAC,GACA,IACAC,EADAC,EAAAH,EAAAI,SAGAF,EAAAC,GAAAlB,EAAAC,aAAA,KAAAe,EAAAhB,EAAAE,gBAA2FgB,GAAAlB,EAAAC,aAAA,KAAAe,EAAAhB,EAAAG,kBAA4Fe,GAAAlB,EAAAI,UAAA,KAAAY,EAAAhB,EAAAK,iBAAwFa,GAAAlB,EAAAM,SAAA,KAAAU,EAAAhB,EAAAO,gBAAsFW,GAAAlB,EAAAM,SAAA,KAAAU,EAAAhB,EAAAQ,kBAAwFU,GAAAlB,EAAAM,SAAA,KAAAU,EAAAhB,EAAAS,oBAC7bS,GAAAlB,EAAAE,iBAAA,KAAAc,EAAAhB,EAAAI,SAA6Fc,GAAAlB,EAAAG,mBAAA,KAAAa,EAAAhB,EAAAI,SAAyFc,GAAAlB,EAAAK,kBAAA,KAAAW,EAAAhB,EAAAM,QAAuFY,GAAAlB,EAAAO,iBAAA,KAAAS,EAAAhB,EAAAY,SAAuFM,GAAAlB,EAAAQ,mBAAA,KAAAQ,EAAAhB,EAAAY,SAAyFM,GAAAlB,EAAAS,qBAAA,KAAAO,EAAAhB,EAAAY,SAA2FM,GAAAlB,EAAAU,kBAAA,KAAAM,EAAAhB,EAAAY,SAAwFM,GAAAlB,EAAAW,kBAAA,KAAAK,EAAAhB,EAAAY,SAChnBM,GAAAlB,EAAAS,qBAAA,KAAAO,EAAAhB,EAAAU,iBAA2GQ,GAAAlB,EAAAS,qBAAA,KAAAO,EAAAhB,EAAAW,iBAC3G,KAAAK,GAAAE,GAAAlB,EAAAC,aAAAiB,GAAAlB,EAAAI,UAAAc,GAAAlB,EAAAM,SAAAY,GAAAlB,EAAAY,SACAM,GAAAlB,EAAAY,UAAA,KAAAI,EAAAhB,EAAAC,YACAD,EAAAa,MAFAK,EAGAH,EAAAI,SAAAF,EAGA,OACAG,WAAA,WACA,OACAD,SAAAnB,EAAAC,YACAoB,KAAA,GACAC,QAAA,GACAC,OAAA,GACAC,MAAA,GACAC,MAAA,KAGAC,MAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAG,OAEA,QAAAD,EAAA,CACAf,EAAAc,EAAAC,GACA,IAAAE,EAAA,GAUA,OATAJ,EAAAK,SAAA,SAAAhB,GACA,WAAAA,GAAA,KAAAA,IACAe,GAAAf,GACA,KAKAY,EAAAP,KAAAY,KAAAF,GACAJ,EAAAO,MAAA,oBACAP,EAAAG,OACAhB,EAAAc,EAAA,KACA,YAGA,QAAAC,EAAA,CACA,IAAAM,EAAA,GAUA,OATAR,EAAAK,SAAA,SAAAhB,GACA,WAAAA,GAAA,KAAAA,IACAmB,GAAAnB,GACA,KAKAY,EAAAN,QAAAW,KAAAE,GACA,aAGA,QAAAN,EAEA,OADAf,EAAAc,EAAA,KACA,WAGA,QAAAC,EAAA,CACAf,EAAAc,EAAAC,GACA,IAAAO,EAAA,GAYA,OAXAT,EAAAK,SAAA,SAAAhB,GACA,WAAAA,IACAoB,GAAApB,GACA,KAKAY,EAAAL,OAAAU,KAAAG,GACAT,EAAAG,OACAhB,EAAAc,EAAA,KACA,UAGA,QAAAC,EAWA,OAVAf,EAAAc,EAAAC,GACAF,EAAAK,SAAA,SAAAhB,GACA,WAAAA,IAEAW,EAAAG,OAEA,KAAAH,EAAAU,QAAA,KAAAV,EAAAU,QACAvB,EAAAc,EAAA,KAGA,SAGA,QAAAC,EAAA,CACAf,EAAAc,EAAA,KACA,IAAAU,EAAA,GAYA,OAXAX,EAAAK,SAAA,SAAAhB,GACA,WAAAA,IACAsB,GAAAtB,GACA,KAKAY,EAAAJ,MAAAS,KAAAK,GACAX,EAAAG,OACAhB,EAAAc,EAAA,KACA,WAGA,QAAAC,EAAA,CACAF,EAAAG,OACAhB,EAAAc,EAAA,KACA,IAAAW,EAAA,GAYA,OAXAZ,EAAAK,SAAA,SAAAhB,GACA,WAAAA,IACAuB,GAAAvB,GACA,KAKAY,EAAAH,MAAAQ,KAAAM,GACAZ,EAAAG,OACAhB,EAAAc,EAAA,KACA,WAGA,KAAAC,GACAf,EAAAc,EAAAC,GAGA,KAAAA,GACAf,EAAAc,EAAAC,OAOA/B,EAAA0C,WAAA,oCAGA1C,EAAA0C,WAAA,kCAEA1C,EAAA0C,WAAA,6BA1KAC,CAAQC,EAAQ","file":"static/js/61.73e4e84c.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**********************************************************\n* This script provides syntax highlighting support for\n* the N-Triples format.\n* N-Triples format specification:\n*     https://www.w3.org/TR/n-triples/\n***********************************************************/\n\n/*\n    The following expression defines the defined ASF grammar transitions.\n\n    pre_subject ->\n        {\n        ( writing_subject_uri | writing_bnode_uri )\n            -> pre_predicate\n                -> writing_predicate_uri\n                    -> pre_object\n                        -> writing_object_uri | writing_object_bnode |\n                          (\n                            writing_object_literal\n                                -> writing_literal_lang | writing_literal_type\n                          )\n                            -> post_object\n                                -> BEGIN\n         } otherwise {\n             -> ERROR\n         }\n*/\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ntriples\", function () {\n    var Location = {\n      PRE_SUBJECT: 0,\n      WRITING_SUB_URI: 1,\n      WRITING_BNODE_URI: 2,\n      PRE_PRED: 3,\n      WRITING_PRED_URI: 4,\n      PRE_OBJ: 5,\n      WRITING_OBJ_URI: 6,\n      WRITING_OBJ_BNODE: 7,\n      WRITING_OBJ_LITERAL: 8,\n      WRITING_LIT_LANG: 9,\n      WRITING_LIT_TYPE: 10,\n      POST_OBJ: 11,\n      ERROR: 12\n    };\n\n    function transitState(currState, c) {\n      var currLocation = currState.location;\n      var ret; // Opening.\n\n      if (currLocation == Location.PRE_SUBJECT && c == '<') ret = Location.WRITING_SUB_URI;else if (currLocation == Location.PRE_SUBJECT && c == '_') ret = Location.WRITING_BNODE_URI;else if (currLocation == Location.PRE_PRED && c == '<') ret = Location.WRITING_PRED_URI;else if (currLocation == Location.PRE_OBJ && c == '<') ret = Location.WRITING_OBJ_URI;else if (currLocation == Location.PRE_OBJ && c == '_') ret = Location.WRITING_OBJ_BNODE;else if (currLocation == Location.PRE_OBJ && c == '\"') ret = Location.WRITING_OBJ_LITERAL; // Closing.\n      else if (currLocation == Location.WRITING_SUB_URI && c == '>') ret = Location.PRE_PRED;else if (currLocation == Location.WRITING_BNODE_URI && c == ' ') ret = Location.PRE_PRED;else if (currLocation == Location.WRITING_PRED_URI && c == '>') ret = Location.PRE_OBJ;else if (currLocation == Location.WRITING_OBJ_URI && c == '>') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_OBJ_BNODE && c == ' ') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '\"') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_LIT_LANG && c == ' ') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_LIT_TYPE && c == '>') ret = Location.POST_OBJ; // Closing typed and language literal.\n        else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '@') ret = Location.WRITING_LIT_LANG;else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '^') ret = Location.WRITING_LIT_TYPE; // Spaces.\n          else if (c == ' ' && (currLocation == Location.PRE_SUBJECT || currLocation == Location.PRE_PRED || currLocation == Location.PRE_OBJ || currLocation == Location.POST_OBJ)) ret = currLocation; // Reset.\n            else if (currLocation == Location.POST_OBJ && c == '.') ret = Location.PRE_SUBJECT; // Error\n              else ret = Location.ERROR;\n      currState.location = ret;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          location: Location.PRE_SUBJECT,\n          uris: [],\n          anchors: [],\n          bnodes: [],\n          langs: [],\n          types: []\n        };\n      },\n      token: function token(stream, state) {\n        var ch = stream.next();\n\n        if (ch == '<') {\n          transitState(state, ch);\n          var parsedURI = '';\n          stream.eatWhile(function (c) {\n            if (c != '#' && c != '>') {\n              parsedURI += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.uris.push(parsedURI);\n          if (stream.match('#', false)) return 'variable';\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == '#') {\n          var parsedAnchor = '';\n          stream.eatWhile(function (c) {\n            if (c != '>' && c != ' ') {\n              parsedAnchor += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.anchors.push(parsedAnchor);\n          return 'variable-2';\n        }\n\n        if (ch == '>') {\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == '_') {\n          transitState(state, ch);\n          var parsedBNode = '';\n          stream.eatWhile(function (c) {\n            if (c != ' ') {\n              parsedBNode += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.bnodes.push(parsedBNode);\n          stream.next();\n          transitState(state, ' ');\n          return 'builtin';\n        }\n\n        if (ch == '\"') {\n          transitState(state, ch);\n          stream.eatWhile(function (c) {\n            return c != '\"';\n          });\n          stream.next();\n\n          if (stream.peek() != '@' && stream.peek() != '^') {\n            transitState(state, '\"');\n          }\n\n          return 'string';\n        }\n\n        if (ch == '@') {\n          transitState(state, '@');\n          var parsedLang = '';\n          stream.eatWhile(function (c) {\n            if (c != ' ') {\n              parsedLang += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.langs.push(parsedLang);\n          stream.next();\n          transitState(state, ' ');\n          return 'string-2';\n        }\n\n        if (ch == '^') {\n          stream.next();\n          transitState(state, '^');\n          var parsedType = '';\n          stream.eatWhile(function (c) {\n            if (c != '>') {\n              parsedType += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.types.push(parsedType);\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == ' ') {\n          transitState(state, ch);\n        }\n\n        if (ch == '.') {\n          transitState(state, ch);\n        }\n      }\n    };\n  }); // define the registered Media Type for n-triples:\n  // https://www.w3.org/TR/n-triples/#n-triples-mediatype\n\n  CodeMirror.defineMIME(\"application/n-triples\", \"ntriples\"); // N-Quads is based on the N-Triples format (so same highlighting works)\n  // https://www.w3.org/TR/n-quads/\n\n  CodeMirror.defineMIME(\"application/n-quads\", \"ntriples\"); // previously used, though technically incorrect media type for n-triples\n\n  CodeMirror.defineMIME(\"text/n-triples\", \"ntriples\");\n});"],"sourceRoot":""}