{"version":3,"sources":["../node_modules/codemirror/mode/brainfuck/brainfuck.js"],"names":["CodeMirror","reserve","split","defineMode","startState","commentLine","left","right","commentLoop","token","stream","state","eatSpace","sol","ch","next","toString","indexOf","eol","defineMIME","mod","__webpack_require__"],"mappings":"+EAKC,SAAAA,GACD,aAEA,IAAAC,EAAA,WAAAC,MAAA,IAaAF,EAAAG,WAAA,uBACA,OACAC,WAAA,WACA,OACAC,aAAA,EACAC,KAAA,EACAC,MAAA,EACAC,aAAA,IAGAC,MAAA,SAAAC,EAAAC,GACA,GAAAD,EAAAE,WAAA,YAEAF,EAAAG,QACAF,EAAAN,aAAA,GAGA,IAAAS,EAAAJ,EAAAK,OAAAC,WAEA,WAAAf,EAAAgB,QAAAH,IAyBAH,EAAAN,aAAA,EAEAK,EAAAQ,QACAP,EAAAN,aAAA,GAGA,YA9BA,IAAAM,EAAAN,aACAK,EAAAQ,QACAP,EAAAN,aAAA,GAGA,WAGA,MAAAS,GAAA,MAAAA,GACA,MAAAA,EACAH,EAAAL,OAEAK,EAAAJ,QAGA,WACW,MAAAO,GAAA,MAAAA,EACX,UACW,MAAAA,GAAA,MAAAA,EACX,OACW,MAAAA,GAAA,MAAAA,EACX,WAYAJ,EAAAQ,QACAP,EAAAN,aAAA,QAKAL,EAAAmB,WAAA,gCA5E6DC,CAAMC,EAAQ","file":"static/js/11.8718d48f.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Brainfuck mode created by Michael Kaminsky https://github.com/mkaminsky11\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) define([\"../../lib/codemirror\"], mod);else mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var reserve = \"><+-.,[]\".split(\"\");\n  /*\n  comments can be either:\n  placed behind lines\n         +++    this is a comment\n   where reserved characters cannot be used\n  or in a loop\n  [\n    this is ok to use [ ] and stuff\n  ]\n  or preceded by #\n  */\n\n  CodeMirror.defineMode(\"brainfuck\", function () {\n    return {\n      startState: function startState() {\n        return {\n          commentLine: false,\n          left: 0,\n          right: 0,\n          commentLoop: false\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.eatSpace()) return null;\n\n        if (stream.sol()) {\n          state.commentLine = false;\n        }\n\n        var ch = stream.next().toString();\n\n        if (reserve.indexOf(ch) !== -1) {\n          if (state.commentLine === true) {\n            if (stream.eol()) {\n              state.commentLine = false;\n            }\n\n            return \"comment\";\n          }\n\n          if (ch === \"]\" || ch === \"[\") {\n            if (ch === \"[\") {\n              state.left++;\n            } else {\n              state.right++;\n            }\n\n            return \"bracket\";\n          } else if (ch === \"+\" || ch === \"-\") {\n            return \"keyword\";\n          } else if (ch === \"<\" || ch === \">\") {\n            return \"atom\";\n          } else if (ch === \".\" || ch === \",\") {\n            return \"def\";\n          }\n        } else {\n          state.commentLine = true;\n\n          if (stream.eol()) {\n            state.commentLine = false;\n          }\n\n          return \"comment\";\n        }\n\n        if (stream.eol()) {\n          state.commentLine = false;\n        }\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-brainfuck\", \"brainfuck\");\n});"],"sourceRoot":""}