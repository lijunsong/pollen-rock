{"version":3,"sources":["../node_modules/codemirror/mode/eiffel/eiffel.js"],"names":["CodeMirror","defineMode","wordObj","words","o","i","e","length","keywords","operators","tokenBase","stream","state","eatSpace","quote","style","unescaped","ch","next","newtok","tokenize","push","chain","escaped","pop","eat","skipToEnd","test","eatWhile","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME","mod","__webpack_require__"],"mappings":"+EAOC,SAAAA,GACD,aAEAA,EAAAC,WAAA,oBACA,SAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,GAEAC,EAAA,EAAAC,EAAAH,EAAAI,OAAuCF,EAAAC,IAAOD,EAC9CD,EAAAD,EAAAE,KAAA,EAGA,OAAAD,EAGA,IAAAI,EAAAN,EAAA,8iBACAO,EAAAP,EAAA,wCAOA,SAAAQ,EAAAC,EAAAC,GACA,GAAAD,EAAAE,WAAA,YACA,IAyBAC,EAAAC,EAAAC,EAzBAC,EAAAN,EAAAO,OAEA,WAAAD,GAAA,KAAAA,EATA,SAAAE,EAAAR,EAAAC,GAEA,OADAA,EAAAQ,SAAAC,KAAAF,GACAA,EAAAR,EAAAC,GAQAU,EAsBAR,EAtBAG,EAsBAF,EAtBA,SAuBA,SAAAJ,EAAAC,GAIA,IAHA,IACAK,EADAM,GAAA,EAGA,OAAAN,EAAAN,EAAAO,SAAA,CACA,GAAAD,GAAAH,IAAAE,IAAAO,GAAA,CACAX,EAAAQ,SAAAI,MACA,MAGAD,MAAA,KAAAN,EAGA,OAAAF,IApCAJ,EAAAC,GACO,KAAAK,GAAAN,EAAAc,IAAA,MACPd,EAAAe,YACA,WACO,KAAAT,GAAAN,EAAAc,IAAA,KACP,WACO,QAAAE,KAAAV,IACPN,EAAAiB,SAAA,iBACAjB,EAAAc,IAAA,UACA,SACO,eAAAE,KAAAV,IACPN,EAAAiB,SAAA,gBACAjB,EAAAc,IAAA,UACA,SACO,iBAAAE,KAAAV,IACPN,EAAAiB,SAAA,kBACA,YAEA,KAsBA,OACAC,WAAA,WACA,OACAT,SAAA,CAAAV,KAGAoB,MAAA,SAAAnB,EAAAC,GACA,IAAAG,EAAAH,EAAAQ,SAAAR,EAAAQ,SAAAb,OAAA,GAAAI,EAAAC,GAEA,YAAAG,EAAA,CACA,IAAAgB,EAAApB,EAAAqB,UACAjB,EAAAP,EAAAyB,qBAAAtB,EAAAqB,WAAA,UAAAvB,EAAAwB,qBAAAtB,EAAAqB,WAAA,gCAAAL,KAAAI,GAAA,uBAAAJ,KAAAI,GAAA,0BAAAJ,KAAAI,GAAA,gCAAAJ,KAAAI,GAAA,gDAAAJ,KAAAI,GAAA,qBAAAJ,KAAAI,GAAA,oBAGA,OAAAhB,GAEAmB,YAAA,QAGAlC,EAAAmC,WAAA,0BAzFAC,CAAQC,EAAQ","file":"static/js/27.7a4ae378.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"eiffel\", function () {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) {\n        o[words[i]] = true;\n      }\n\n      return o;\n    }\n\n    var keywords = wordObj(['note', 'across', 'when', 'variant', 'until', 'unique', 'undefine', 'then', 'strip', 'select', 'retry', 'rescue', 'require', 'rename', 'reference', 'redefine', 'prefix', 'once', 'old', 'obsolete', 'loop', 'local', 'like', 'is', 'inspect', 'infix', 'include', 'if', 'frozen', 'from', 'external', 'export', 'ensure', 'end', 'elseif', 'else', 'do', 'creation', 'create', 'check', 'alias', 'agent', 'separate', 'invariant', 'inherit', 'indexing', 'feature', 'expanded', 'deferred', 'class', 'Void', 'True', 'Result', 'Precursor', 'False', 'Current', 'create', 'attached', 'detachable', 'as', 'and', 'implies', 'not', 'or']);\n    var operators = wordObj([\":=\", \"and then\", \"and\", \"or\", \"<<\", \">>\"]);\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) return null;\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        return chain(readQuoted(ch, \"string\"), stream, state);\n      } else if (ch == \"-\" && stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \":\" && stream.eat(\"=\")) {\n        return \"operator\";\n      } else if (/[0-9]/.test(ch)) {\n        stream.eatWhile(/[xXbBCc0-9\\.]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[a-zA-Z_0-9]/.test(ch)) {\n        stream.eatWhile(/[a-zA-Z_0-9]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n        stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function readQuoted(quote, style, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          escaped = !escaped && ch == \"%\";\n        }\n\n        return style;\n      };\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase]\n        };\n      },\n      token: function token(stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : operators.propertyIsEnumerable(stream.current()) ? \"operator\" : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\" : /^0[bB][0-1]+$/g.test(word) ? \"number\" : /^0[cC][0-7]+$/g.test(word) ? \"number\" : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\" : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\" : /^[0-9]+$/g.test(word) ? \"number\" : \"variable\";\n        }\n\n        return style;\n      },\n      lineComment: \"--\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n});"],"sourceRoot":""}