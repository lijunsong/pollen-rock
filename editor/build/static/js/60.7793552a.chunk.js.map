{"version":3,"sources":["../node_modules/codemirror/mode/nsis/nsis.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","indent","dedent","next","comment","meta","electricInput","blockCommentStart","blockCommentEnd","lineComment","defineMIME","mod","__webpack_require__","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","push","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/60.7793552a.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Author: Jan T. Sott (http://github.com/idleberg)\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"nsis\", {\n    start: [// Numbers\n    {\n      regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/,\n      token: \"number\"\n    }, // Strings\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }, {\n      regex: /'(?:[^\\\\']|\\\\.)*'?/,\n      token: \"string\"\n    }, {\n      regex: /`(?:[^\\\\`]|\\\\.)*`?/,\n      token: \"string\"\n    }, // Compile Time Commands\n    {\n      regex: /^\\s*(?:\\!(include|addincludedir|addplugindir|appendfile|cd|delfile|echo|error|execute|packhdr|pragma|finalize|getdllversion|gettlbversion|system|tempfile|warning|verbose|define|undef|insertmacro|macro|macroend|makensis|searchparse|searchreplace))\\b/,\n      token: \"keyword\"\n    }, // Conditional Compilation\n    {\n      regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/,\n      token: \"keyword\",\n      indent: true\n    }, {\n      regex: /^\\s*(?:\\!(else|endif|macroend))\\b/,\n      token: \"keyword\",\n      dedent: true\n    }, // Runtime Commands\n    {\n      regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetLabelAddress|GetTempFileName|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEDllCharacteristics|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/,\n      token: \"keyword\"\n    }, {\n      regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/,\n      token: \"keyword\",\n      indent: true\n    }, {\n      regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/,\n      token: \"keyword\",\n      dedent: true\n    }, // Command Options\n    {\n      regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/,\n      token: \"atom\"\n    }, {\n      regex: /\\b(?:admin|all|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|zlib)\\b/,\n      token: \"builtin\"\n    }, // LogicLib.nsh\n    {\n      regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/,\n      token: \"variable-2\",\n      indent: true\n    }, // FileFunc.nsh\n    {\n      regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/,\n      token: \"variable-2\",\n      dedent: true\n    }, // Memento.nsh\n    {\n      regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/,\n      token: \"variable-2\",\n      dedent: true\n    }, // TextFunc.nsh\n    {\n      regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/,\n      token: \"variable-2\",\n      dedent: true\n    }, // WinVer.nsh\n    {\n      regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/,\n      token: \"variable\",\n      dedent: true\n    }, // WordFunc.nsh\n    {\n      regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/,\n      token: \"variable-2\",\n      dedent: true\n    }, // x64.nsh\n    {\n      regex: /\\$\\{(?:RunningX64)\\}/,\n      token: \"variable\",\n      dedent: true\n    }, {\n      regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/,\n      token: \"variable-2\",\n      dedent: true\n    }, // Line Comment\n    {\n      regex: /(#|;).*/,\n      token: \"comment\"\n    }, // Block Comment\n    {\n      regex: /\\/\\*/,\n      token: \"comment\",\n      next: \"comment\"\n    }, // Operator\n    {\n      regex: /[-+\\/*=<>!]+/,\n      token: \"operator\"\n    }, // Variable\n    {\n      regex: /\\$\\w+/,\n      token: \"variable\"\n    }, // Constant\n    {\n      regex: /\\${[\\w\\.:-]+}/,\n      token: \"variable-2\"\n    }, // Language String\n    {\n      regex: /\\$\\([\\w\\.:-]+\\)/,\n      token: \"variable-3\"\n    }],\n    comment: [{\n      regex: /.*?\\*\\//,\n      token: \"comment\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"comment\"\n    }],\n    meta: {\n      electricInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/,\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: [\"#\", \";\"]\n    }\n  });\n  CodeMirror.defineMIME(\"text/x-nsis\", \"nsis\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) {\n      if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [],\n            orig = states[state];\n\n        for (var i = 0; i < orig.length; i++) {\n          var data = orig[i];\n          list.push(new Rule(data, states));\n          if (data.indent || data.dedent) hasIndentation = true;\n        }\n      }\n    }\n\n    var mode = {\n      startState: function startState() {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function copyState(state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) {\n          s.persistentStates = {\n            mode: pers.mode,\n            spec: pers.spec,\n            state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n            next: s.persistentStates\n          };\n        }\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function innerMode(state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) {\n      if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    }\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) {\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    }\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) {\n              if (matches[j]) state.pending.push({\n                text: matches[j],\n                token: rule.token[j - 1]\n              });\n            }\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) {\n      if (a.hasOwnProperty(prop)) {\n        if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n        props++;\n      }\n    }\n\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop)) props--;\n    }\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) {\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    }\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === val) return true;\n    }\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});"],"sourceRoot":""}